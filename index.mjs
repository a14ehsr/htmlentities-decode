// const { JSDOM } = require("jsdom");
// const dom = new JSDOM();

// if ( typeof htmlEntities == 'undefined' ) {
//   htmlEntities = function ( str, proc ) {
//     if ( 'encode' == proc ) {
//       return str.replace( /[\u0000-\uFFFF<>\&]/g, function(c) {
//         return typeof htmlEntities.entityTable[c.charCodeAt(0)] != 'undefined' ? '&'+htmlEntities.entityTable[c.charCodeAt(0)]+';' : c;
//       });
//     } else {
//       var elm = dom.window.document.createElement( 'div' );
//       str = escape( str ).replace( /%26/g,'&' ).replace( /%23/g,'#' ).replace( /%3B/g,';' );
//       elm.innerHTML = unescape( str );
//       str = elm.textContent;
//       if ( elm.innerText ) {
//         str = elm.innerText;
//         elm.innerText = '';
//       } else {
//         str = elm.textContent;
//         elm.textContent = '';
//       }
//       return str;
//     }
//   };

  // htmlEntities.entityTable = {
  //   34 : 'quot', 
  //   38 : 'amp', 

  //   39 : 'apos', 

  //   60 : 'lt', 
  //   62 : 'gt', 
  //  160 : 'nbsp', 
  //  161 : 'iexcl', 
  //  162 : 'cent', 
  //  163 : 'pound', 
  //  164 : 'curren', 
  //  165 : 'yen', 
  //  166 : 'brvbar', 
  //  167 : 'sect', 

  //  168 : 'uml', 
  
  //  169 : 'copy', 
  //  170 : 'ordf', 
  //  171 : 'laquo', 
  //  172 : 'not', 
  //  173 : 'shy', 
  //  174 : 'reg', 
  //  175 : 'macr', 
  //  176 : 'deg', 
  //  177 : 'plusmn', 
  //  178 : 'sup2', 
  //  179 : 'sup3', 
  //  180 : 'acute', 
  //  181 : 'micro', 
  //  182 : 'para', 
  //  183 : 'middot', 
  //  184 : 'cedil', 
  //  185 : 'sup1', 
  //  186 : 'ordm', 
  //  187 : 'raquo', 
  //  188 : 'frac14', 
  //  189 : 'frac12', 
  //  190 : 'frac34', 
  //  191 : 'iquest', 
  //  192 : 'Agrave', 
  //  193 : 'Aacute', 
  //  194 : 'Acirc', 
  //  195 : 'Atilde', 
  //  196 : 'Auml', 
  //  197 : 'Aring', 
  //  198 : 'AElig', 
  //  199 : 'Ccedil', 
  //  200 : 'Egrave', 
  //  201 : 'Eacute', 
  //  202 : 'Ecirc', 
  //  203 : 'Euml', 
  //  204 : 'Igrave', 
  //  205 : 'Iacute', 
  //  206 : 'Icirc', 
  //  207 : 'Iuml', 
  //  208 : 'ETH', 
  //  209 : 'Ntilde', 
  //  210 : 'Ograve', 
  //  211 : 'Oacute', 
  //  212 : 'Ocirc', 
  //  213 : 'Otilde', 
  //  214 : 'Ouml', 
  //  215 : 'times', 
  //  216 : 'Oslash', 
  //  217 : 'Ugrave', 
  //  218 : 'Uacute', 
  //  219 : 'Ucirc', 
  //  220 : 'Uuml', 
  //  221 : 'Yacute', 
  //  222 : 'THORN', 
  //  223 : 'szlig', 
  //  224 : 'agrave', 
  //  225 : 'aacute', 
  //  226 : 'acirc', 
  //  227 : 'atilde', 
  //  228 : 'auml', 
  //  229 : 'aring', 
  //  230 : 'aelig', 
  //  231 : 'ccedil', 
  //  232 : 'egrave', 
  //  233 : 'eacute', 
  //  234 : 'ecirc', 
  //  235 : 'euml', 
  //  236 : 'igrave', 
  //  237 : 'iacute', 
  //  238 : 'icirc', 
  //  239 : 'iuml', 
  //  240 : 'eth', 
  //  241 : 'ntilde', 
  //  242 : 'ograve', 
  //  243 : 'oacute', 
  //  244 : 'ocirc', 
  //  245 : 'otilde', 
  //  246 : 'ouml', 
  //  247 : 'divide', 
  //  248 : 'oslash', 
  //  249 : 'ugrave', 
  //  250 : 'uacute', 
  //  251 : 'ucirc', 
  //  252 : 'uuml', 
  //  253 : 'yacute', 
  //  254 : 'thorn', 
  //  255 : 'yuml', 
  //  338 : 'OElig', 
  //  339 : 'oelig', 
  //  352 : 'Scaron', 
  //  353 : 'scaron', 
  //  376 : 'Yuml', 
  //  402 : 'fnof', 
  //  710 : 'circ', 
  //  732 : 'tilde', 
  //  913 : 'Alpha', 
  //  914 : 'Beta', 
  //  915 : 'Gamma', 
  //  916 : 'Delta', 
  //  917 : 'Epsilon', 
  //  918 : 'Zeta', 
  //  919 : 'Eta', 
  //  920 : 'Theta', 
  //  921 : 'Iota', 
  //  922 : 'Kappa', 
  //  923 : 'Lambda', 
  //  924 : 'Mu', 
  //  925 : 'Nu', 
  //  926 : 'Xi', 
  //  927 : 'Omicron', 
  //  928 : 'Pi', 
  //  929 : 'Rho', 
  //  931 : 'Sigma', 
  //  932 : 'Tau', 
  //  933 : 'Upsilon', 
  //  934 : 'Phi', 
  //  935 : 'Chi', 
  //  936 : 'Psi', 
  //  937 : 'Omega', 
  //  945 : 'alpha', 
  //  946 : 'beta', 
  //  947 : 'gamma', 
  //  948 : 'delta', 
  //  949 : 'epsilon', 
  //  950 : 'zeta', 
  //  951 : 'eta', 
  //  952 : 'theta', 
  //  953 : 'iota', 
  //  954 : 'kappa', 
  //  955 : 'lambda', 
  //  956 : 'mu', 
  //  957 : 'nu', 
  //  958 : 'xi', 
  //  959 : 'omicron', 
  //  960 : 'pi', 
  //  961 : 'rho', 
  //  962 : 'sigmaf', 
  //  963 : 'sigma', 
  //  964 : 'tau', 
  //  965 : 'upsilon', 
  //  966 : 'phi', 
  //  967 : 'chi', 
  //  968 : 'psi', 
  //  969 : 'omega', 
  //  977 : 'thetasym', 
  //  978 : 'upsih', 
  //  982 : 'piv', 
  // 8194 : 'ensp', 
  // 8195 : 'emsp', 
  // 8201 : 'thinsp', 
  // 8204 : 'zwnj', 
  // 8205 : 'zwj', 
  // 8206 : 'lrm', 
  // 8207 : 'rlm', 
  // 8211 : 'ndash', 
  // 8212 : 'mdash', 
  // 8216 : 'lsquo', 
  // 8217 : 'rsquo', 
  // 8218 : 'sbquo', 
  // 8220 : 'ldquo', 
  // 8221 : 'rdquo', 
  // 8222 : 'bdquo', 
  // 8224 : 'dagger', 
  // 8225 : 'Dagger', 
  // 8226 : 'bull', 
  // 8230 : 'hellip', 
  // 8240 : 'permil', 
  // 8242 : 'prime', 
  // 8243 : 'Prime', 
  // 8249 : 'lsaquo', 
  // 8250 : 'rsaquo', 
  // 8254 : 'oline', 
  // 8260 : 'frasl', 
  // 8364 : 'euro', 
  // 8465 : 'image', 
  // 8472 : 'weierp', 
  // 8476 : 'real', 
  // 8482 : 'trade', 
  // 8501 : 'alefsym', 
  // 8592 : 'larr', 
  // 8593 : 'uarr', 
  // 8594 : 'rarr', 
  // 8595 : 'darr', 
  // 8596 : 'harr', 
  // 8629 : 'crarr', 
  // 8656 : 'lArr', 
  // 8657 : 'uArr', 
  // 8658 : 'rArr', 
  // 8659 : 'dArr', 
  // 8660 : 'hArr', 
  // 8704 : 'forall', 
  // 8706 : 'part', 
  // 8707 : 'exist', 
  // 8709 : 'empty', 
  // 8711 : 'nabla', 
  // 8712 : 'isin', 
  // 8713 : 'notin', 
  // 8715 : 'ni', 
  // 8719 : 'prod', 
  // 8721 : 'sum', 
  // 8722 : 'minus', 
  // 8727 : 'lowast', 
  // 8730 : 'radic', 
  // 8733 : 'prop', 
  // 8734 : 'infin', 
  // 8736 : 'ang', 
  // 8743 : 'and', 
  // 8744 : 'or', 
  // 8745 : 'cap', 
  // 8746 : 'cup', 
  // 8747 : 'int', 
  // 8756 : 'there4', 
  // 8764 : 'sim', 
  // 8773 : 'cong', 
  // 8776 : 'asymp', 
  // 8800 : 'ne', 
  // 8801 : 'equiv', 
  // 8804 : 'le', 
  // 8805 : 'ge', 
  // 8834 : 'sub', 
  // 8835 : 'sup', 
  // 8836 : 'nsub', 
  // 8838 : 'sube', 
  // 8839 : 'supe', 
  // 8853 : 'oplus', 
  // 8855 : 'otimes', 
  // 8869 : 'perp', 
  // 8901 : 'sdot', 
  // 8968 : 'lceil', 
  // 8969 : 'rceil', 
  // 8970 : 'lfloor', 
  // 8971 : 'rfloor', 
  // 9001 : 'lang', 
  // 9002 : 'rang', 
  // 9674 : 'loz', 
  // 9824 : 'spades', 
  // 9827 : 'clubs', 
  // 9829 : 'hearts', 
  // 9830 : 'diams', 
  // };
// }

// var str = " <>&\"'ˆ^˜~–—¢£¥€©®™ƒŒœ•…‘†‰α⁄←♠1Aaあｱ一𡈽";
// console.log( htmlEntities( str, 'encode' ) );
// //  &lt;&gt;&amp;&quot;&apos;&circ;^&tilde;~&ndash;&mdash;&cent;&pound;&yen;&euro;&copy;&reg;&trade;&fnof;&OElig;&oelig;&bull;&hellip;&lsquo;&dagger;&permil;&alpha;&frasl;&larr;&spades;1Aaあｱ一𡈽

// var entity = ' &lt;&gt;&amp;&quot;&apos;&circ;^&tilde;~&ndash;&mdash;&cent;&pound;&yen;&euro;&copy;&reg;&trade;&fnof;&OElig;&oelig;&bull;&hellip;&lsquo;&dagger;&permil;&alpha;&frasl;&larr;&spades;1Aaあｱ一𡈽';
// console.log( htmlEntities( entity, 'decode' ) );
// //  <>&"'ˆ^˜~–—¢£¥€©®™ƒŒœ•…‘†‰α⁄←♠1Aaあｱ一𡈽



const strList = [
  { decode: "&", encode: "&amp;", encodeSub: "&#38;", },
  { decode: "¦", encode: "&brvbar;", encodeSub: "&#166;", },
  { decode: "µ", encode: "&micro;", encodeSub: "&#181;", },
  { decode: "‰", encode: "&permil;", encodeSub: "&#8240;", },
  { decode: "¤", encode: "&curren;", encodeSub: "&#164;", },
  { decode: "€", encode: "&euro;", encodeSub: "&#128;", },
  { decode: "¢", encode: "&cent;", encodeSub: "&#162;", },
  { decode: "£", encode: "&pound;", encodeSub: "&#163;", },
  { decode: "¥", encode: "&yen;", encodeSub: "&#165;", },
  { decode: "©", encode: "&copy;", encodeSub: "&#169;", },
  { decode: "®", encode: "&reg;", encodeSub: "&#174;", },
  { decode: "™", encode: "&trade;", encodeSub: "&#8482;", },
  { decode: "↑", encode: "&uarr;", encodeSub: "&#8593;", },
  { decode: "→", encode: "&rarr;", encodeSub: "&#8594;", },
  { decode: "↓", encode: "&darr;", encodeSub: "&#8595;", },
  { decode: "←", encode: "&larr;", encodeSub: "&#8592;", },
  { decode: "↔", encode: "&harr;", encodeSub: "&#8596;", },
  { decode: "↵", encode: "&crarr;", encodeSub: "&#8629;", },
  { decode: "⇑", encode: "&uArr;", encodeSub: "&#8657;", },
  { decode: "⇒", encode: "&rArr;", encodeSub: "&#8658;", },
  { decode: "⇓", encode: "&dArr;", encodeSub: "&#8659;", },
  { decode: "⇐", encode: "&lArr;", encodeSub: "&#8656;", },
  { decode: "⇔", encode: "&hArr;", encodeSub: "&#8660;", },
  { decode: "♠", encode: "&spades;", encodeSub: "&#9824;", },
  { decode: "♣", encode: "&clubs;", encodeSub: "&#9827;", },
  { decode: "♥", encode: "&hearts;", encodeSub: "&#9829;", },
  { decode: "♦", encode: "&diams;", encodeSub: "&#9830;", },
  { decode: "ª", encode: "&ordf;", encodeSub: "&#170;", },
  { decode: "º", encode: "&ordm;", encodeSub: "&#186;", },
  { decode: "¹", encode: "&sup1;", encodeSub: "&#185;", },
  { decode: "²", encode: "&sup2;", encodeSub: "&#178;", },
  { decode: "³", encode: "&sup3;", encodeSub: "&#179;", },
  { decode: "½", encode: "&frac12;", encodeSub: "&#189;", },
  { decode: "¼", encode: "&frac14;", encodeSub: "&#188;", },
  { decode: "¾", encode: "&frac34;", encodeSub: "&#190;", },
  { decode: "·", encode: "&middot;", encodeSub: "&#183;", },
  { decode: "¡", encode: "&iexcl;", encodeSub: "&#161;", },
  { decode: "¿", encode: "&iquest;", encodeSub: "&#191;", },
  { decode: '"', encode: "&quot;", encodeSub: "&#34;", },
  { decode: "‘", encode: "&lsquo;", encodeSub: "&#8216;", },
  { decode: "’", encode: "&rsquo;", encodeSub: "&#8217;", },
  { decode: "“", encode: "&ldquo;", encodeSub: "&#8220;", },
  { decode: "”", encode: "&rdquo;", encodeSub: "&#8221;", },
  { decode: "«", encode: "&laquo;", encodeSub: "&#171;", },
  { decode: "»", encode: "&raquo;", encodeSub: "&#187;", },
  { decode: " ", encode: "&nbsp;", encodeSub: "&#160;", },
  { decode: " ", encode: "&emsp;", encodeSub: "&#8195;", },
  { decode: " ", encode: "&ensp;", encodeSub: "&#8194;", },
  { decode: " ", encode: "&thinsp;", encodeSub: "&#8201;", },
  { decode: "—", encode: "&mdash;", encodeSub: "&#8212;", },
  { decode: "–", encode: "&ndash;", encodeSub: "&#8211;", },
  { decode: "­", encode: "&shy;", encodeSub: "&#173;", },
  { decode: "•", encode: "&bull;", encodeSub: "&#8226;", },
  { decode: "¶", encode: "&para;", encodeSub: "&#182;", },
  { decode: "§", encode: "&sect;", encodeSub: "&#167;", },
  { decode: "†", encode: "&dagger;", encodeSub: "&#8224;", },
  { decode: "‡", encode: "&Dagger;", encodeSub: "&#8225;", },
  { decode: "…", encode: "&hellip;", encodeSub: "&#8230;", },
  { decode: "◊", encode: "&loz;", encodeSub: "&#9674;", },
  { decode: "‾", encode: "&oline;", encodeSub: "&#8254;", },
  { decode: "⁄", encode: "&frasl;", encodeSub: "&#8260;", },
  { decode: "∞", encode: "&infin;", encodeSub: "&#8734;", },
  { decode: "√", encode: "&radic;", encodeSub: "&#8730;", },
  { decode: "−", encode: "&minus;", encodeSub: "&#8722;", },
  { decode: "±", encode: "&plusmn;", encodeSub: "&#177;", },
  { decode: "×", encode: "&times;", encodeSub: "&#215;", },
  { decode: "÷", encode: "&divide;", encodeSub: "&#247;", },
  { decode: "≠", encode: "&ne;", encodeSub: "&#8800;", },
  { decode: "≈", encode: "&asymp;", encodeSub: "&#8776;", },
  { decode: "≅", encode: "&cong;", encodeSub: "&#8773;", },
  { decode: ">", encode: "&gt;", encodeSub: "&#62;", },
  { decode: "<", encode: "&lt;", encodeSub: "&#60;", },
  { decode: "≥", encode: "&ge;", encodeSub: "&#8805;", },
  { decode: "≤", encode: "&le;", encodeSub: "&#8804;", },
  { decode: "ƒ", encode: "&fnof;", encodeSub: "&#402;", },
  { decode: "∝", encode: "&prop;", encodeSub: "&#8733;", },
  { decode: "′", encode: "&prime;", encodeSub: "&#8242;", },
  { decode: "″", encode: "&Prime;", encodeSub: "&#8243;", },
  { decode: "∫", encode: "&int;", encodeSub: "&#8747;", },
  { decode: "∂", encode: "&part;", encodeSub: "&#8706;", },
  { decode: "∇", encode: "&nabla;", encodeSub: "&#8711;", },
  { decode: "∑", encode: "&sum;", encodeSub: "&#8721;", },
  { decode: "∏", encode: "&prod;", encodeSub: "&#8719;", },
  { decode: "ℑ", encode: "&image;", encodeSub: "&#8465;", },
  { decode: "ℜ", encode: "&real;", encodeSub: "&#8476;", },
  { decode: "℘", encode: "&weierp;", encodeSub: "&#8472;", },
  { decode: "∼", encode: "&sim;", encodeSub: "&#8764;", },
  { decode: "∴", encode: "&there4;", encodeSub: "&#8756;", },
  { decode: "ϖ", encode: "&piv;", encodeSub: "&#982;", },
  { decode: "∠", encode: "&ang;", encodeSub: "&#8736;", },
  { decode: "°", encode: "&deg;", encodeSub: "&#176;", },
  { decode: "⊥", encode: "&perp;", encodeSub: "&#8869;", },
  { decode: "≡", encode: "&equiv;", encodeSub: "&#8801;", },
  { decode: "¬", encode: "&not;", encodeSub: "&#172;", },
  { decode: "∀", encode: "&forall;", encodeSub: "&#8704;", },
  { decode: "∃", encode: "&exist;", encodeSub: "&#8707;", },
  { decode: "∧", encode: "&and;", encodeSub: "&#8743;", },
  { decode: "∨", encode: "&or;", encodeSub: "&#8744;", },
  { decode: "∅", encode: "&empty;", encodeSub: "&#8709;", },
  { decode: "∩", encode: "&cap;", encodeSub: "&#8745;", },
  { decode: "∪", encode: "&cup;", encodeSub: "&#8746;", },
  { decode: "∈", encode: "&isin;", encodeSub: "&#8712;", },
  { decode: "∉", encode: "&notin;", encodeSub: "&#8713;", },
  { decode: "∋", encode: "&ni;", encodeSub: "&#8715;", },
  { decode: "⊂", encode: "&sub;", encodeSub: "&#8834;", },
  { decode: "⊃", encode: "&sup;", encodeSub: "&#8835;", },
  { decode: "⊄", encode: "&nsub;", encodeSub: "&#8836;", },
  { decode: "⊆", encode: "&sube;", encodeSub: "&#8838;", },
  { decode: "⊇", encode: "&supe;", encodeSub: "&#8839;", },
  { decode: "⋅", encode: "&sdot;", encodeSub: "&#8901;", },
  { decode: "∗", encode: "&lowast;", encodeSub: "&#8727;", },
  { decode: "⊕", encode: "&oplus;", encodeSub: "&#8853;", },
  { decode: "⊗", encode: "&otimes;", encodeSub: "&#8855;", },
  { decode: "⌈", encode: "&lceil;", encodeSub: "&#8968;", },
  { decode: "⌊", encode: "&lfloor;", encodeSub: "&#8970;", },
  { decode: "⌉", encode: "&rceil;", encodeSub: "&#8969;", },
  { decode: "⌋", encode: "&rfloor;", encodeSub: "&#8971;", },
];

const strList2 = [
  { decode: "á", encode: "&aacute;", },
  { decode: "Á", encode: "&Aacute;", },
  { decode: "â", encode: "&acirc;", },
  { decode: "Â", encode: "&Acirc;", },
  { decode: "´", encode: "&acute;", },
  { decode: "æ", encode: "&aelig;", },
  { decode: "Æ", encode: "&AElig;", },
  { decode: "à", encode: "&agrave;", },
  { decode: "À", encode: "&Agrave;", },
  { decode: "ℵ", encode: "&alefsym;", },
  { decode: "α", encode: "&alpha;", },
  { decode: "Α", encode: "&Alpha;", },
  { decode: "'", encode: "&apos;", },
  { decode: "å", encode: "&aring;", },
  { decode: "Å", encode: "&Aring;", },
  { decode: "ã", encode: "&atilde;", },
  { decode: "Ã", encode: "&Atilde;", },
  { decode: "ä", encode: "&auml;", },
  { decode: "Ä", encode: "&Auml;", },
  { decode: "„", encode: "&bdquo;", },
  { decode: "β", encode: "&beta;", },
  { decode: "Β", encode: "&Beta;", },
  { decode: "ç", encode: "&ccedil;", },
  { decode: "Ç", encode: "&Ccedil;", },
  { decode: "¸", encode: "&cedil;", },
  { decode: "χ", encode: "&chi;", },
  { decode: "Χ", encode: "&Chi;", },
  { decode: "ˆ", encode: "&circ;", },
  { decode: "δ", encode: "&delta;", },
  { decode: "Δ", encode: "&Delta;", },
  { decode: "é", encode: "&eacute;", },
  { decode: "É", encode: "&Eacute;", },
  { decode: "ê", encode: "&ecirc;", },
  { decode: "Ê", encode: "&Ecirc;", },
  { decode: "è", encode: "&egrave;", },
  { decode: "È", encode: "&Egrave;", },
  { decode: "ε", encode: "&epsilon;", },
  { decode: "Ε", encode: "&Epsilon;", },
  { decode: "η", encode: "&eta;", },
  { decode: "Η", encode: "&Eta;", },
  { decode: "ð", encode: "&eth;", },
  { decode: "Ð", encode: "&ETH;", },
  { decode: "ë", encode: "&euml;", },
  { decode: "Ë", encode: "&Euml;", },
  { decode: "γ", encode: "&gamma;", },
  { decode: "Γ", encode: "&Gamma;", },
  { decode: "í", encode: "&iacute;", },
  { decode: "Í", encode: "&Iacute;", },
  { decode: "î", encode: "&icirc;", },
  { decode: "Î", encode: "&Icirc;", },
  { decode: "ì", encode: "&igrave;", },
  { decode: "Ì", encode: "&Igrave;", },
  { decode: "ι", encode: "&iota;", },
  { decode: "Ι", encode: "&Iota;", },
  { decode: "ï", encode: "&iuml;", },
  { decode: "Ï", encode: "&Iuml;", },
  { decode: "κ", encode: "&kappa;", },
  { decode: "Κ", encode: "&Kappa;", },
  { decode: "λ", encode: "&lambda;", },
  { decode: "Λ", encode: "&Lambda;", },
  { decode: "〈", encode: "&lang;", },
  { decode: "«", encode: "&laquo;", },
  { decode: "‎", encode: "&lrm;", },
  { decode: "‹", encode: "&lsaquo;", },
  { decode: "¯", encode: "&macr;", },
  { decode: "μ", encode: "&mu;", },
  { decode: "Μ", encode: "&Mu;", },
  { decode: "ñ", encode: "&ntilde;", },
  { decode: "Ñ", encode: "&Ntilde;", },
  { decode: "ν", encode: "&nu;", },
  { decode: "Ν", encode: "&Nu;", },
  { decode: "ó", encode: "&oacute;", },
  { decode: "Ó", encode: "&Oacute;", },
  { decode: "ô", encode: "&ocirc;", },
  { decode: "Ô", encode: "&Ocirc;", },
  { decode: "œ", encode: "&oelig;", },
  { decode: "Œ", encode: "&OElig;", },
  { decode: "ò", encode: "&ograve;", },
  { decode: "Ò", encode: "&Ograve;", },
  { decode: "ω", encode: "&omega;", },
  { decode: "Ω", encode: "&Omega;", },
  { decode: "ο", encode: "&omicron;", },
  { decode: "Ο", encode: "&Omicron;", },
  { decode: "ø", encode: "&oslash;", },
  { decode: "Ø", encode: "&Oslash;", },
  { decode: "õ", encode: "&otilde;", },
  { decode: "Õ", encode: "&Otilde;", },
  { decode: "ö", encode: "&ouml;", },
  { decode: "Ö", encode: "&Ouml;", },
  { decode: "φ", encode: "&phi;", },
  { decode: "Φ", encode: "&Phi;", },
  { decode: "π", encode: "&pi;", },
  { decode: "Π", encode: "&Pi;", },
  { decode: "ψ", encode: "&psi;", },
  { decode: "Ψ", encode: "&Psi;", },
  { decode: "〉", encode: "&rang;", },
  { decode: "ρ", encode: "&rho;", },
  { decode: "Ρ", encode: "&Rho;", },
  { decode: "‏", encode: "&rlm;", },
  { decode: "›", encode: "&rsaquo;", },
  { decode: "‚", encode: "&sbquo;", },
  { decode: "š", encode: "&scaron;", },
  { decode: "Š", encode: "&Scaron;", },
  { decode: "§", encode: "&sect;", },
  { decode: "­", encode: "&shy;", },
  { decode: "σ", encode: "&sigma;", },
  { decode: "Σ", encode: "&Sigma;", },
  { decode: "ς", encode: "&sigmaf;", },
  { decode: "ß", encode: "&szlig;", },
  { decode: "τ", encode: "&tau;", },
  { decode: "Τ", encode: "&Tau;", },
  { decode: "θ", encode: "&theta;", },
  { decode: "Θ", encode: "&Theta;", },
  { decode: "ϑ", encode: "&thetasym;", },
  { decode: "þ", encode: "&thorn;", },
  { decode: "Þ", encode: "&THORN;", },
  { decode: "˜", encode: "&tilde;", },
  { decode: "ú", encode: "&uacute;", },
  { decode: "Ú", encode: "&Uacute;", },
  { decode: "û", encode: "&ucirc;", },
  { decode: "Û", encode: "&Ucirc;", },
  { decode: "ù", encode: "&ugrave;", },
  { decode: "Ù", encode: "&Ugrave;", },
  { decode: "¨", encode: "&uml;", },
  { decode: "ϒ", encode: "&upsih;", },
  { decode: "υ", encode: "&upsilon;", },
  { decode: "Υ", encode: "&Upsilon;", },
  { decode: "ü", encode: "&uuml;", },
  { decode: "Ü", encode: "&Uuml;", },
  { decode: "ξ", encode: "&xi;", },
  { decode: "Ξ", encode: "&Xi;", },
  { decode: "ý", encode: "&yacute;", },
  { decode: "Ý", encode: "&Yacute;", },
  { decode: "ÿ", encode: "&yuml;", },
  { decode: "Ÿ", encode: "&Yuml;", },
  { decode: "ζ", encode: "&zeta;", },
  { decode: "Ζ", encode: "&Zeta;", },
  { decode: "‍", encode: "&zwj;", },
  { decode: "‌", encode: "&zwnj;", },  
]


// import unescape from 'lodash.unescape';
// import {decode} from 'html-entities';
import {decodeHTML as decode, encodeHTML as encode } from 'entities';

strList.forEach((el, index) => {
  console.log(`${el.decode}|${decode(el.encode)}|${el.encode}|${el.decode === decode(el.encode)}|${el.decode.charCodeAt(0)}|${decode(el.encode).charCodeAt(0)}`);
});

strList2.forEach((el) => {
  console.log(`${el.decode}|${decode(el.encode)}|${el.encode}|${el.decode === decode(el.encode)}|${el.decode.charCodeAt(0)}|${decode(el.encode).charCodeAt(0)}`);
});

// entities
// 〉|⟩|&rang;|9002|10217
// 〈|⟨|&lang;|9001|10216
// | |&nbsp;|32|160
// html-entities（上記に加えて）
// ∉|¬in;|&notin;8713|172

// phpでの変換
// &apos;のhtml_entity_decodeでのdecodeができない
// '|&apos;|false
// 数値参照からののhtml_entity_decodeでのdecodeができない
// € | &euro; | &euro; | € | &#128; | &#128; | false | true
// 返還前 !== html_entity_decode(実態参照) （返還前 === html_entity_decode(htmlentities(返還前)) は成立）
// |   | &nbsp; |   | &#160; |   | true | false
